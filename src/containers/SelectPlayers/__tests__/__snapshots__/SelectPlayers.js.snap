// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectPlayers SelectPlayers Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SelectPlayers
    setCaption={[MockFunction]}
    setPlayers={[MockFunction]}
    usedCaptions={
      Array [
        "Test1",
        "Test2",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="title"
        >
          Giphy Mario Bros.
        </h1>,
        <Link
          onClick={[Function]}
          replace={false}
          to="/home"
        >
          <button
            className="three-btn"
          >
            3 Players
          </button>
        </Link>,
        <Link
          onClick={[Function]}
          replace={false}
          to="/home"
        >
          <button
            className="four-btn"
          >
            4 Players
          </button>
        </Link>,
      ],
      "className": "players",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Giphy Mario Bros.",
          "className": "title",
        },
        "ref": null,
        "rendered": "Giphy Mario Bros.",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="three-btn"
          >
            3 Players
          </button>,
          "onClick": [Function],
          "replace": false,
          "to": "/home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "3 Players",
            "className": "three-btn",
          },
          "ref": null,
          "rendered": "3 Players",
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="four-btn"
          >
            4 Players
          </button>,
          "onClick": [Function],
          "replace": false,
          "to": "/home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "4 Players",
            "className": "four-btn",
          },
          "ref": null,
          "rendered": "4 Players",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="title"
          >
            Giphy Mario Bros.
          </h1>,
          <Link
            onClick={[Function]}
            replace={false}
            to="/home"
          >
            <button
              className="three-btn"
            >
              3 Players
            </button>
          </Link>,
          <Link
            onClick={[Function]}
            replace={false}
            to="/home"
          >
            <button
              className="four-btn"
            >
              4 Players
            </button>
          </Link>,
        ],
        "className": "players",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Giphy Mario Bros.",
            "className": "title",
          },
          "ref": null,
          "rendered": "Giphy Mario Bros.",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="three-btn"
            >
              3 Players
            </button>,
            "onClick": [Function],
            "replace": false,
            "to": "/home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "3 Players",
              "className": "three-btn",
            },
            "ref": null,
            "rendered": "3 Players",
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="four-btn"
            >
              4 Players
            </button>,
            "onClick": [Function],
            "replace": false,
            "to": "/home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "4 Players",
              "className": "four-btn",
            },
            "ref": null,
            "rendered": "4 Players",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

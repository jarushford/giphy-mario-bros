// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Error
    clearError={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="error-msg"
        >
          Something has gone terribly wrong.
        </h1>,
        <Link
          onClick={[MockFunction]}
          replace={false}
          to="/"
        >
          <button>
            Return to Site
          </button>
        </Link>,
      ],
      "className": "error",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Something has gone terribly wrong.",
          "className": "error-msg",
        },
        "ref": null,
        "rendered": "Something has gone terribly wrong.",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button>
            Return to Site
          </button>,
          "onClick": [MockFunction],
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Return to Site",
          },
          "ref": null,
          "rendered": "Return to Site",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="error-msg"
          >
            Something has gone terribly wrong.
          </h1>,
          <Link
            onClick={[MockFunction]}
            replace={false}
            to="/"
          >
            <button>
              Return to Site
            </button>
          </Link>,
        ],
        "className": "error",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Something has gone terribly wrong.",
            "className": "error-msg",
          },
          "ref": null,
          "rendered": "Something has gone terribly wrong.",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button>
              Return to Site
            </button>,
            "onClick": [MockFunction],
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Return to Site",
            },
            "ref": null,
            "rendered": "Return to Site",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
